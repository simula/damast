[tox]
env=py
name=damast
docker_base_image=python:3.10-slim
artifacts_dir={toxinidir}/artifacts

[testenv]
extras = test
allowlist_externals =
    pytest
set_env =
    CUDA_VISIBLE_DEVICES=
commands =
    pytest --cov={[tox]name} \
           --cov-report=html:{[tox]artifacts_dir}/tests/ \
           --cov-report=term \
           --cov-report=xml:{[tox]artifacts_dir}/tests/cobertura-coverage.xml \
           {toxinidir}/tests

[testenv:backend_jax]
extras = ml
set_env =
    CUDA_VISIBLE_DEVICES=
    KERAS_BACKEND=jax

[testenv:backend_tensorflow]
extras = ml
set_env =
    CUDA_VISIBLE_DEVICES=
    KERAS_BACKEND=tensorflow

[testenv:backend_torch]
set_env =
    CUDA_VISIBLE_DEVICES=
    KERAS_BACKEND=torch

[testenv:validate]
skip_install = true
deps =
    pre-commit
commands =
    pre-commit install
    pre-commit run --all-files

[testenv:lint]
skip_install = true
deps =
    flake8
    flake8-gl-codeclimate
allowlist_externals =
    flake8
commands = flake8 --exit-zero --format gl-codeclimate --output-file {[tox]artifacts_dir}/lint/lint-codeclimate.json

[testenv:build_docs]
skip_install = true
deps =
    jupyter-book
commands =
    python -m pip install pydot pandas
    python -m pip install .[dev]
    jupyter book build .

[flake8]
# Align with black setup https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
max-line-length=120
select = C,E,F,W,B,B950
extend-ignore = E203, E501
